{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Documents/GitHub/Kselix/my-app/src/content/massage/dialogBar/dialogBar.jsx\";\nimport DialogBarStyle from './dialogBar.module.css';\nimport React from 'react';\nimport { DialogBarElem } from './DialogBarElem/DialogBarElem';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DialogBar = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: DialogBarStyle.Massage__dialogsBar,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dialogBarElem\",\n        children: /*#__PURE__*/_jsxDEV(DialogBarElem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dialogBarElem\",\n        children: /*#__PURE__*/_jsxDEV(DialogBarElem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dialogBarElem\",\n        children: /*#__PURE__*/_jsxDEV(DialogBarElem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/DialogBarElem\",\n        element: /*#__PURE__*/_jsxDEV(DialogBarElem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/DialogBarElem\",\n        element: /*#__PURE__*/_jsxDEV(DialogBarElem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/DialogBarElem\",\n        element: /*#__PURE__*/_jsxDEV(DialogBarElem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DialogBar;\n\nlet randomName = () => {\n  let names = [\"Sasha\", \"Masha\", \"Dasha\", \"Stas\"];\n  console.lognames[Math.floor(Math.random() * 4)];\n};\n\nexport default DialogBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogBar\");","map":{"version":3,"sources":["/Users/kseniatuzova/Documents/GitHub/Kselix/my-app/src/content/massage/dialogBar/dialogBar.jsx"],"names":["DialogBarStyle","React","DialogBarElem","Routes","Route","Link","DialogBar","props","Massage__dialogsBar","randomName","names","console","lognames","Math","floor","random"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAkC,kBAAlC;;;;AAIA,MAAMC,SAAS,GAAEC,KAAD,IAAS;AACrB,sBACI;AAAA,4BACJ;AAAK,MAAA,SAAS,EAAEP,cAAc,CAACQ,mBAA/B;AAAA,8BACJ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAAA,+BAA0B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAAA,+BAA0B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAAA,+BAA0B,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAQH,QAAC,MAAD;AAAA,8BACK,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,gBAAb;AAA8B,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cADL,eAEK,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,gBAAb;AAA8B,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,gBAAb;AAA8B,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YARG;AAAA,kBADJ;AAiBH,CAlBD;;KAAMF,S;;AAoBN,IAAIG,UAAU,GAAC,MAAI;AACjB,MAAIC,KAAK,GAAC,CAAE,OAAF,EACR,OADQ,EAER,OAFQ,EAGR,MAHQ,CAAV;AAIEC,EAAAA,OAAO,CAACC,QAAR,CAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAjB;AACH,CAND;;AAQA,eAAeT,SAAf","sourcesContent":["import DialogBarStyle from './dialogBar.module.css'\nimport React from 'react'\nimport { DialogBarElem } from './DialogBarElem/DialogBarElem'\nimport {Routes, Route, Link} from 'react-router-dom'\n\n\n\nconst DialogBar=(props)=>{\n    return(\n        <>\n    <div className={DialogBarStyle.Massage__dialogsBar}>\n<Link to='/dialogBarElem'><DialogBarElem/></Link>\n<Link to='/dialogBarElem'><DialogBarElem/></Link>\n<Link to='/dialogBarElem'><DialogBarElem/></Link>\n\n    </div>\n          \n     <Routes>\n          <Route  path='/DialogBarElem' element={<DialogBarElem/>}></Route>\n          <Route  path='/DialogBarElem' element={<DialogBarElem/>}></Route>\n          <Route  path='/DialogBarElem' element={<DialogBarElem/>}></Route>\n      </Routes>\n      </>   \n    \n    )\n}\n\nlet randomName=()=>{\n  let names=[ \"Sasha\",\n    \"Masha\",\n    \"Dasha\",\n    \"Stas\"];\n    console.lognames[Math.floor(Math.random() * 4)];\n}\n\nexport default DialogBar"]},"metadata":{},"sourceType":"module"}